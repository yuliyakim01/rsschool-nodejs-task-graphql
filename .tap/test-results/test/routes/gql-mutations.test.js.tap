TAP version 14
# Subtest: gql-mutations
    # Subtest: Create resources.
        not ok 1 - Cannot read properties of null (reading 'createPost')
          ---
          stack: |
            Test.<anonymous> (test/routes/gql-mutations.test.js:49:64)
          at:
            fileName: test/routes/gql-mutations.test.js
            lineNumber: 49
            columnNumber: 64
            typeName: Test
            methodName: <anonymous>
            functionName: Test.<anonymous>
          type: TypeError
          tapCaught: returnedPromiseRejection
          source: >2
                });
          
                const { body: foundCreatedPost } = await getPost(app, data.createPost.id);
            ---------------------------------------------------------------^
                const { body: foundCreatedUser } = await getUser(app, data.createUser.id);
                const { body: foundCreatedProfile } = await getProfile(app, data.createProfile.id);
          ...
        
        1..1
    not ok 1 - Create resources. # time=49.825ms
      ---
      at:
        fileName: test/routes/gql-mutations.test.js
        lineNumber: 25
        columnNumber: 11
        typeName: Test
      source: |2
          const app = await build(t);
      
          await t.test('Create resources.', async (t) => {
        ----------^
            const { body: user1 } = await createUser(app);
      ...
    
    # Subtest: Create profile => fail; invalid dto.yearOfBirth.
        ok 1 - should be equal
        ok 2 - should be equal
        1..2
    ok 2 - Create profile => fail; invalid dto.yearOfBirth. # time=1.76ms
    
    # Subtest: Delete resources by id.
        not ok 1 - should be equal
          ---
          at:
            fileName: test/routes/gql-mutations.test.js
            lineNumber: 106
            columnNumber: 7
            typeName: Test
          stack: |
            Test.<anonymous> (test/routes/gql-mutations.test.js:106:7)
          source: |2
                const { body: foundCreatedProfile } = await getProfile(app, profile1.id);
          
                t.ok(!errors);
            ------^
                t.ok(foundDeletedPost === null);
                t.ok(foundCreatedUser === null);
          ...
        
        not ok 2 - should be equal
          ---
          at:
            fileName: test/routes/gql-mutations.test.js
            lineNumber: 107
            columnNumber: 7
            typeName: Test
          stack: |
            Test.<anonymous> (test/routes/gql-mutations.test.js:107:7)
          source: |2
          
                t.ok(!errors);
                t.ok(foundDeletedPost === null);
            ------^
                t.ok(foundCreatedUser === null);
                t.ok(foundCreatedProfile === null);
          ...
        
        not ok 3 - should be equal
          ---
          at:
            fileName: test/routes/gql-mutations.test.js
            lineNumber: 108
            columnNumber: 7
            typeName: Test
          stack: |
            Test.<anonymous> (test/routes/gql-mutations.test.js:108:7)
          source: |2
                t.ok(!errors);
                t.ok(foundDeletedPost === null);
                t.ok(foundCreatedUser === null);
            ------^
                t.ok(foundCreatedProfile === null);
              });
          ...
        
        not ok 4 - should be equal
          ---
          at:
            fileName: test/routes/gql-mutations.test.js
            lineNumber: 109
            columnNumber: 7
            typeName: Test
          stack: |
            Test.<anonymous> (test/routes/gql-mutations.test.js:109:7)
          source: |2
                t.ok(foundDeletedPost === null);
                t.ok(foundCreatedUser === null);
                t.ok(foundCreatedProfile === null);
            ------^
              });
          ...
        
        1..4
    not ok 3 - Delete resources by id. # time=17.487ms
      ---
      at:
        fileName: test/routes/gql-mutations.test.js
        lineNumber: 81
        columnNumber: 11
        typeName: Test
      source: |2
          });
      
          await t.test('Delete resources by id.', async (t) => {
        ----------^
            const { body: user1 } = await createUser(app);
            const { body: post1 } = await createPost(app, user1.id);
      ...
    
    # Subtest: Change resources by id.
        not ok 1 - Cannot read properties of null (reading 'changePost')
          ---
          stack: |
            Test.<anonymous> (test/routes/gql-mutations.test.js:147:64)
          at:
            fileName: test/routes/gql-mutations.test.js
            lineNumber: 147
            columnNumber: 64
            typeName: Test
            methodName: <anonymous>
            functionName: Test.<anonymous>
          type: TypeError
          tapCaught: returnedPromiseRejection
          source: >2
                });
          
                const { body: foundChangedPost } = await getPost(app, data.changePost.id);
            ---------------------------------------------------------------^
                const { body: foundChangedUser } = await getUser(app, data.changeUser.id);
                const { body: foundChangedProfile } = await getProfile(app, data.changeProfile.id);
          ...
        
        1..1
    not ok 4 - Change resources by id. # time=6.929ms
      ---
      at:
        fileName: test/routes/gql-mutations.test.js
        lineNumber: 112
        columnNumber: 11
        typeName: Test
      source: |2
          });
      
          await t.test('Change resources by id.', async (t) => {
        ----------^
            const { body: user1 } = await createUser(app);
            const { body: post1 } = await createPost(app, user1.id);
      ...
    
    # Subtest: Change profile => fail; invalid dto.userId.
        ok 1 - should be equal
        1..1
    ok 5 - Change profile => fail; invalid dto.userId. # time=1.562ms
    
    # Subtest: Subs mutations.
        not ok 1 - should be equal
          ---
          at:
            fileName: test/routes/gql-mutations.test.js
            lineNumber: 203
            columnNumber: 7
            typeName: Test
          stack: |
            Test.<anonymous> (test/routes/gql-mutations.test.js:203:7)
          source: |2
                const { body: subscribedToUser4 } = await subscribedToUser(app, user4.id);
          
                t.ok(!errors);
            ------^
                t.ok(subscribedToUser2[0].id === user1.id);
                t.ok(subscribedToUser4.length === 0);
          ...
        
        not ok 2 - Cannot read properties of undefined (reading 'id')
          ---
          stack: |
            Test.<anonymous> (test/routes/gql-mutations.test.js:204:31)
          at:
            fileName: test/routes/gql-mutations.test.js
            lineNumber: 204
            columnNumber: 31
            typeName: Test
            methodName: <anonymous>
            functionName: Test.<anonymous>
          type: TypeError
          tapCaught: returnedPromiseRejection
          source: |2
          
                t.ok(!errors);
                t.ok(subscribedToUser2[0].id === user1.id);
            ------------------------------^
                t.ok(subscribedToUser4.length === 0);
              });
          ...
        
        1..2
    not ok 6 - Subs mutations. # time=12.556ms
      ---
      at:
        fileName: test/routes/gql-mutations.test.js
        lineNumber: 177
        columnNumber: 11
        typeName: Test
      source: |2
          });
      
          await t.test('Subs mutations.', async (t) => {
        ----------^
            const { body: user1 } = await createUser(app);
            const { body: user2 } = await createUser(app);
      ...
    
    1..6
not ok 1 - gql-mutations # time=494.791ms
  ---
  at:
    fileName: test/routes/gql-mutations.test.js
    lineNumber: 22
    columnNumber: 7
    isToplevel: true
  source: |
    } from '../utils/fake.js';
  
    await test('gql-mutations', async (t) => {
    ------^
      const app = await build(t);
  ...

1..1
