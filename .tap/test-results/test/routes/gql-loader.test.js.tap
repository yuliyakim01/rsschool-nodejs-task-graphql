TAP version 14
# Subtest: gql-loader
    # Subtest: Get users with their posts, memberTypes.
        not ok 1 - should be equal
          ---
          at:
            fileName: test/routes/gql-loader.test.js
            lineNumber: 61
            columnNumber: 7
            typeName: Test
          stack: |
            Test.<anonymous> (test/routes/gql-loader.test.js:61:7)
          source: |2
                } = await getPrismaStats(app);
          
                t.ok(!errors);
            ------^
                t.ok(afterHistory.length - beforeHistory.length <= 6);
          ...
        
        ok 2 - should be equal
        not ok 3 - should be equal
          ---
          at:
            fileName: test/routes/gql-loader.test.js
            lineNumber: 72
            columnNumber: 7
            typeName: Test
          stack: |
            Test.<anonymous> (test/routes/gql-loader.test.js:72:7)
          source: |2
                );
          
                t.ok(foundPostCall);
            ------^
                t.ok(foundMemberTypeCall);
              });
          ...
        
        not ok 4 - should be equal
          ---
          at:
            fileName: test/routes/gql-loader.test.js
            lineNumber: 73
            columnNumber: 7
            typeName: Test
          stack: |
            Test.<anonymous> (test/routes/gql-loader.test.js:73:7)
          source: |2
          
                t.ok(foundPostCall);
                t.ok(foundMemberTypeCall);
            ------^
              });
          ...
        
        1..4
    not ok 1 - Get users with their posts, memberTypes. # time=73.621ms
      ---
      at:
        fileName: test/routes/gql-loader.test.js
        lineNumber: 17
        columnNumber: 11
        typeName: Test
      source: |2
          const app = await build(t);
      
          await t.test('Get users with their posts, memberTypes.', async (t) => {
        ----------^
            const { body: user1 } = await createUser(app);
            await createPost(app, user1.id);
      ...
    
    # Subtest: Dataloader should be created per request.
        not ok 1 - Cannot read properties of undefined (reading 'users')
          ---
          stack: |
            Test.<anonymous> (test/routes/gql-loader.test.js:108:29)
          at:
            fileName: test/routes/gql-loader.test.js
            lineNumber: 108
            columnNumber: 29
            typeName: Test
            methodName: <anonymous>
            functionName: Test.<anonymous>
          type: TypeError
          tapCaught: returnedPromiseRejection
          source: |2
                });
          
                const foundUser1 = data.users.find(({ id }) => id === user1.id);
            ----------------------------^
          
                t.ok(foundUser1.userSubscribedTo.length === 0);
          ...
        
        1..1
    not ok 2 - Dataloader should be created per request. # time=15.496ms
      ---
      at:
        fileName: test/routes/gql-loader.test.js
        lineNumber: 76
        columnNumber: 11
        typeName: Test
      source: |2
          });
      
          await t.test('Dataloader should be created per request.', async (t) => {
        ----------^
            const { body: user1 } = await createUser(app);
            const { body: user2 } = await createUser(app);
      ...
    
    1..2
not ok 1 - gql-loader # time=490.328ms
  ---
  at:
    fileName: test/routes/gql-loader.test.js
    lineNumber: 14
    columnNumber: 7
    isToplevel: true
  source: |
    import { MemberTypeId } from '../../src/routes/member-types/schemas.js';
  
    await test('gql-loader', async (t) => {
    ------^
      const app = await build(t);
  ...

1..1
